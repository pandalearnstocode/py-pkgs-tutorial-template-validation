name: ci-cd
on: [push, pull_request]
jobs:
  pr_title:
    name: Validate PR title
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.head_ref == 'master'
    steps:
      - name: Validate Pull Request
        uses: amannn/action-semantic-pull-request@v5
        with:
          types: |
            feat
            fix
            docs
            style
            refactor
            perf
            test
            build
            chore
            revert
          scopes: |
            source
            ci
            cd
            wiki
            docstring
            refactor
            formatting
            style
            linting
            test
            build
            profiling
            refactor
          requireScope: true
          disallowScopes: |
            release
          subjectPattern: ^(?![A-Z]).+$
          subjectPatternError: |
            The subject "{subject}" found in the pull request title "{title}"
            didn't match the configured pattern. Please ensure that the subject
            doesn't start with an uppercase character.
          ignoreLabels: |
            bot
            ignore-semantic-pull-request
          headerPattern: '^(\w*)(?:\(([\w$.\-*/ ]*)\))?: (.*)$'
          headerPatternCorrespondence: type, scope, subject
          wip: true
          validateSingleCommit: true
          validateSingleCommitMatchesPrTitle: true
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  create_label:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.head_ref == 'master'
    needs: pr_title
    permissions:
      contents: read
      pull-requests: write
    steps:
    - name: Label PR
      uses: actions/labeler@v4
      with:
        repo-token: "${{ secrets.GITHUB_TOKEN }}"
        configuration-path: .github/labeler.yml
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  ci:
    if: github.event_name == 'pull_request' && github.head_ref == 'master'
    runs-on: ubuntu-latest
    steps:
      - name: Install system level libraries
        run: |
          sudo apt-get update
          sudo apt-get -y install libpq-dev gcc
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - name: Check-out repository
        uses: actions/checkout@v3
      - name: Install poetry
        run: curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python
      - name: Install Python dependencies
        run: |
          poetry config virtualenvs.in-project true
          poetry install -n
      - name: Set up cache
        uses: actions/cache@v3.0.10
        with:
          path: .venv
          key: venv-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('poetry.lock') }}
      - name: Test with pytest
        run: poetry run pytest tests/ --cov=py_pkgs_tutorial --cov-report=xml
  cd:
    needs: ci
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - name: Check-out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Use Python Semantic Release to prepare release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            git config user.name github-actions
            git config user.email github-actions@github.com
      - name: Python Semantic Release
        uses: relekang/python-semantic-release@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          repository_username: __token__
          repository_password: ${{ secrets.PYPI_TOKEN }}
